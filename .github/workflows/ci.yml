name: Customer Service CI/CD

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run tests
      run: mvn clean test
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
        
    - name: Build application
      run: mvn clean package -DskipTests
      
    - name: Build Docker image (dev branch)
      if: github.ref == 'refs/heads/dev'
      run: |
        docker build -t customer-service:dev .
        
    - name: Build Docker image (main branch)
      if: github.ref == 'refs/heads/main'
      run: |
        docker build -t customer-service:latest .

  api-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/dev'
    
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Build and start application
      run: |
        mvn clean package -DskipTests
        java -jar target/customer-service-1.0.0.jar &
        sleep 30
        
    - name: Install Newman
      run: npm install -g newman
      
    - name: Run Postman collection
      run: newman run Customer-Service-API.postman_collection.json -e Customer-Service.postman_environment.json --reporters cli,junit --reporter-junit-export newman-results.xml
      
    - name: Publish Newman test results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: API Tests
        path: newman-results.xml
        reporter: java-junit
